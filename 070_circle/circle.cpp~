#include "circle.hpp"

#include <cmath>

Circle::Circle(Point p_init, double r_init) : p(p_init), r(r_init) {
}

void Circle::move(double dx, double dy) {
  this->p.move(dx, dy);
}

double Circle::intersectionArea(const Circle & c) {
  double d = this->p.distanceFrom(c.p);
  if (d > (this->r + c.r))
    return 0;
  if (d <= std::abs(this->r - c.r)) {
    double r_min = (this->r < c.r) ? this->r : c.r;
    return M_PI * r_min * r_min;
  }
  double acos_1 = getACOS(this->r, c.r, d);
  double acos_2 = getACOS
}

double getACOS(double r1, double r2, double d) {
  return std::acos((r1 * r1 - r2 * r2 + d * d) / 2 * d * r1);
}
